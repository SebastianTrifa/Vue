{"remainingRequest":"C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\node_modules\\babel-loader\\lib\\index.js!C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\src\\shared\\data.service.js","dependencies":[{"path":"C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\src\\shared\\data.service.js","mtime":1572795396599},{"path":"C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _typeof from \"C:\\\\VisualStudio\\\\Vue\\\\vue-getting-started\\\\08-routing\\\\end\\\\vue-heroes\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/typeof\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\VisualStudio\\\\Vue\\\\vue-getting-started\\\\08-routing\\\\end\\\\vue-heroes\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport * as axios from 'axios';\nimport { format } from 'date-fns';\nimport { inputDateFormat } from \"./constants\";\nimport { API } from \"./config\";\n\nvar getFilms =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var response, films;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"\".concat(API, \"/films\"));\n\n          case 3:\n            response = _context.sent;\n            films = parseList(response);\n            return _context.abrupt(\"return\", films);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n            return _context.abrupt(\"return\", []);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function getFilms() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar getFilm =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee2(id) {\n    var response, film;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(API, \"/films/\").concat(id));\n\n          case 3:\n            response = _context2.sent;\n            film = parseItem(response, 200);\n            return _context2.abrupt(\"return\", film);\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n            return _context2.abrupt(\"return\", null);\n\n          case 12:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function getFilm(_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar updateFilm =\n/*#__PURE__*/\nfunction () {\n  var _ref3 = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(film) {\n    var response, updatedFilm;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.put(\"\".concat(API, \"/films/\").concat(film.id), film);\n\n          case 3:\n            response = _context3.sent;\n            updatedFilm = parseItem(response, 200);\n            return _context3.abrupt(\"return\", updatedFilm);\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n            return _context3.abrupt(\"return\", null);\n\n          case 12:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 8]]);\n  }));\n\n  return function updateFilm(_x2) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nvar parseList = function parseList(response) {\n  if (response.status !== 200) throw Error(response.message);\n  if (!response.data) return [];\n  var list = response.data;\n\n  if (_typeof(list) !== 'object') {\n    list = [];\n  }\n\n  return list;\n};\n\nexport var parseItem = function parseItem(response, code) {\n  if (response.status !== code) throw Error(response.message);\n  var item = response.data;\n\n  if (_typeof(item) !== 'object') {\n    item = undefined;\n  }\n\n  return item;\n};\nexport var dataService = {\n  getFilms: getFilms,\n  getFilm: getFilm,\n  updateFilm: updateFilm\n};",{"version":3,"sources":["C:\\VisualStudio\\Vue\\vue-getting-started\\08-routing\\end\\vue-heroes\\src\\shared\\data.service.js"],"names":["axios","format","inputDateFormat","API","getFilms","get","response","films","parseList","console","error","getFilm","id","film","parseItem","updateFilm","put","updatedFilm","status","Error","message","data","list","code","item","undefined","dataService"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,eAAT;AAEA,SAASC,GAAT;;AAEA,IAAMC,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEUJ,KAAK,CAACK,GAAN,WAAaF,GAAb,YAFV;;AAAA;AAEPG,YAAAA,QAFO;AAITC,YAAAA,KAJS,GAIDC,SAAS,CAACF,QAAD,CAJR;AAAA,6CAKNC,KALM;;AAAA;AAAA;AAAA;AAObE,YAAAA,OAAO,CAACC,KAAR;AAPa,6CAQN,EARM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARN,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAYA,IAAMO,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAeC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEWZ,KAAK,CAACK,GAAN,WAAaF,GAAb,oBAA0BS,EAA1B,EAFX;;AAAA;AAENN,YAAAA,QAFM;AAGRO,YAAAA,IAHQ,GAGDC,SAAS,CAACR,QAAD,EAAW,GAAX,CAHR;AAAA,8CAILO,IAJK;;AAAA;AAAA;AAAA;AAMZJ,YAAAA,OAAO,CAACC,KAAR;AANY,8CAOL,IAPK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPC,OAAO;AAAA;AAAA;AAAA,GAAb;;AAWA,IAAMI,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG,kBAAeF,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEQb,KAAK,CAACgB,GAAN,WAAab,GAAb,oBAA0BU,IAAI,CAACD,EAA/B,GAAqCC,IAArC,CAFR;;AAAA;AAETP,YAAAA,QAFS;AAGTW,YAAAA,WAHS,GAGKH,SAAS,CAACR,QAAD,EAAW,GAAX,CAHd;AAAA,8CAIRW,WAJQ;;AAAA;AAAA;AAAA;AAMfR,YAAAA,OAAO,CAACC,KAAR;AANe,8CAOR,IAPQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVK,UAAU;AAAA;AAAA;AAAA,GAAhB;;AAWA,IAAMP,SAAS,GAAG,SAAZA,SAAY,CAAAF,QAAQ,EAAI;AAC5B,MAAIA,QAAQ,CAACY,MAAT,KAAoB,GAAxB,EAA6B,MAAMC,KAAK,CAACb,QAAQ,CAACc,OAAV,CAAX;AAC7B,MAAI,CAACd,QAAQ,CAACe,IAAd,EAAoB,OAAO,EAAP;AACpB,MAAIC,IAAI,GAAGhB,QAAQ,CAACe,IAApB;;AACA,MAAI,QAAOC,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAG,EAAP;AACD;;AACD,SAAOA,IAAP;AACD,CARD;;AAUA,OAAO,IAAMR,SAAS,GAAG,SAAZA,SAAY,CAACR,QAAD,EAAWiB,IAAX,EAAoB;AAC3C,MAAIjB,QAAQ,CAACY,MAAT,KAAoBK,IAAxB,EAA8B,MAAMJ,KAAK,CAACb,QAAQ,CAACc,OAAV,CAAX;AAC9B,MAAII,IAAI,GAAGlB,QAAQ,CAACe,IAApB;;AACA,MAAI,QAAOG,IAAP,MAAgB,QAApB,EAA8B;AAC5BA,IAAAA,IAAI,GAAGC,SAAP;AACD;;AACD,SAAOD,IAAP;AACD,CAPM;AASP,OAAO,IAAME,WAAW,GAAG;AACzBtB,EAAAA,QAAQ,EAARA,QADyB;AAEzBO,EAAAA,OAAO,EAAPA,OAFyB;AAGzBI,EAAAA,UAAU,EAAVA;AAHyB,CAApB","sourcesContent":["import * as axios from 'axios';\n\nimport { format } from 'date-fns';\nimport { inputDateFormat } from './constants';\n\nimport { API } from './config';\n\nconst getFilms = async function() {\n  try {\n    const response = await axios.get(`${API}/films`);\n\n    let films = parseList(response);\n    return films;\n  } catch (error) {\n    console.error(error);\n    return [];\n  }\n};\n\nconst getFilm = async function(id) {\n  try {\n    const response = await axios.get(`${API}/films/${id}`);\n    let film = parseItem(response, 200);\n    return film;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nconst updateFilm = async function(film) {\n  try {\n    const response = await axios.put(`${API}/films/${film.id}`, film);\n    const updatedFilm = parseItem(response, 200);\n    return updatedFilm;\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n};\n\nconst parseList = response => {\n  if (response.status !== 200) throw Error(response.message);\n  if (!response.data) return [];\n  let list = response.data;\n  if (typeof list !== 'object') {\n    list = [];\n  }\n  return list;\n};\n\nexport const parseItem = (response, code) => {\n  if (response.status !== code) throw Error(response.message);\n  let item = response.data;\n  if (typeof item !== 'object') {\n    item = undefined;\n  }\n  return item;\n};\n\nexport const dataService = {\n  getFilms,\n  getFilm,\n  updateFilm,\n};\n"]}]}